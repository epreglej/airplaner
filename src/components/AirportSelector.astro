---
const { label } = Astro.props;
const input_id = label.toLowerCase() + "-input";
---

<div
    x-data="{
        allOptions: [],
        options: [],
        isOpen: false,
        openedWithKeyboard: false,
        selectedOption: null,
        setSelectedOption(option) {
            this.selectedOption = option
            this.isOpen = false
            this.openedWithKeyboard = false
            this.$refs.hiddenTextField.value = option.value
        },
        getFilteredOptions(query) {
            this.options = this.allOptions.filter((option) =>
                option.name.toLowerCase().includes(query.toLowerCase()),
            )
            if (this.options.length === 0) {
                this.$refs.noResultsMessage.classList.remove('hidden')
            } else {
                this.$refs.noResultsMessage.classList.add('hidden')
            }
        },
        handleKeydownOnOptions(event) {
            // if the user presses backspace or the alpha-numeric keys, focus on the search field
            if ((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57) || event.keyCode === 8) {
                this.$refs.searchField.focus()
            }
        },
    }"
    class="flex w-full flex-col"
    x-on:keydown="handleKeydownOnOptions($event)"
    x-on:keydown.esc.window="isOpen = false, openedWithKeyboard = false"
    x-init="fetch('https://www.ryanair.com/api/views/locate/5/airports/en/active')
                .then(response => response.json())
                .then(data => {
                        allOptions = data; // Assign fetched data to allOptions
                        options = data; // Also assign fetched data to options
                })"
>
    <div class="relative">
        <!-- trigger button  -->
        <button
            type="button"
            class="inline-flex w-full h-10 items-center justify-between gap-2 rounded-none bg-neutral-100 px-4 py-2 text-sm font-medium tracking-wide text-neutral-600 transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black"
            role="combobox"
            aria-controls="makesList"
            aria-haspopup="listbox"
            x-data={`{ label: '${label}'}`}
            x-on:click="isOpen = ! isOpen"
            x-on:keydown.down.prevent="openedWithKeyboard = true"
            x-on:keydown.enter.prevent="openedWithKeyboard = true"
            x-on:keydown.space.prevent="openedWithKeyboard = true"
            x-bind:aria-expanded="isOpen || openedWithKeyboard"
            x-bind:aria-label="selectedOption ? selectedOption.value : label"
        >
            <span
                class="text-sm font-normal"
                x-text="selectedOption ? selectedOption.name : label"></span>
            <!-- Chevron  -->
            <template x-if="!selectedOption">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="size-5"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="m19.5 8.25-7.5 7.5-7.5-7.5"></path>
                </svg>
            </template>

            <template x-if="selectedOption">
                <button
                    @click.stop="selectedOption=null"
                    class="hover:outline-1"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="size-5"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M6 18 18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </template>
        </button>

        <!-- Hidden Input To Grab The Selected Value  -->
        <input id={input_id} name={label} x-ref="hiddenTextField" hidden="" />
        <div
            x-show="isOpen || openedWithKeyboard"
            id="makesList"
            class="absolute left-0 top-0 z-10 w-full overflow-hidden rounded-none bg-neutral-100"
            role="listbox"
            aria-label="industries list"
            x-on:click.outside="isOpen = false, openedWithKeyboard = false"
            x-on:keydown.down.prevent="$focus.wrap().next()"
            x-on:keydown.up.prevent="$focus.wrap().previous()"
            x-transition
            x-trap="openedWithKeyboard"
        >
            <!-- Search  -->
            <div class="relative">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                    fill="none"
                    stroke-width="1.5"
                    class="absolute left-4 top-1/2 size-5 -translate-y-1/2 text-neutral-600/50"
                    aria-hidden="true"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
                    ></path>
                </svg>
                <input
                    type="text"
                    class="w-full h-10 border-b borderneutral-300 bg-neutral-100 py-2.5 pl-11 pr-4 text-sm text-neutral-600 focus:outline-none focus-visible:border-black disabled:cursor-not-allowed disabled:opacity-75"
                    name="searchField"
                    aria-label="Search"
                    x-trap="isOpen"
                    x-on:input="getFilteredOptions($el.value)"
                    x-ref="searchField"
                    placeholder="Search"
                />
            </div>

            <!-- Options  -->
            <ul class="flex max-h-44 flex-col overflow-y-auto">
                <li
                    class="hidden px-4 py-2 text-sm text-neutral-600"
                    x-ref="noResultsMessage"
                >
                    <span>No matches found</span>
                </li>
                <template
                    x-for="(item, index) in options"
                    x-bind:key="item.code"
                >
                    <li
                        class="combobox-option inline-flex cursor-pointer justify-between gap-6 bg-neutral-100 px-4 py-2 text-sm text-neutral-600 hover:bg-neutral-800/5 hover:text-neutral-900 focus-visible:bg-neutral-800/5 focus-visible:text-neutral-900 focus-visible:outline-none"
                        role="option"
                        x-on:click="setSelectedOption(item)"
                        x-on:keydown.enter="setSelectedOption(item)"
                        x-bind:id="'option-' + index"
                        tabindex="0"
                    >
                        <!-- Label  -->
                        <span
                            x-bind:class="selectedOption == item ? 'font-bold' : null"
                            x-text="item.name"></span>
                        <!-- Screen reader 'selected' indicator  -->
                        <span
                            class="sr-only"
                            x-text="selectedOption == item ? 'selected' : null"
                        ></span>
                        <!-- Checkmark  -->
                        <svg
                            x-cloak
                            x-show="selectedOption == item"
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                            fill="none"
                            stroke-width="2"
                            class="size-4"
                            aria-hidden="true"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="m4.5 12.75 6 6 9-13.5"
                            >
                            </path>
                        </svg>
                    </li>
                </template>
            </ul>
        </div>
    </div>
</div>
